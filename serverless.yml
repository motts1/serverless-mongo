# NOTE: update this with your service name
service: divinity-serverless-mongo

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: us-east-1
  # profile: enter-name-here
  memorySize: 128
  timeout: 10
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
      Resource: '*'

functions:
  email:
    handler: email.main
    events:
      - http:
          path: email
          method: post
          cors: true
  createUser:
    handler: users.create
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: users
          method: post
          cors: true
  getOneUser:
    handler: users.getOne
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: users/{id}
          method: get
          cors: true
  getAllUsers:
    handler: users.getAll
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: users
          method: get
          cors: true
  updateUser:
    handler: users.update
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: users/{id}
          method: put
          cors: true
  deleteUser:
    handler: users.delete
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: users/{id}
          method: delete
          cors: true
  createOrder:
    handler: orders.create
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: orders
          method: post
          cors: true
  getOrder:
    handler: orders.getOrder
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: orders/{id}
          method: get
          cors: true
  getAllOrders:
    handler: orders.getAllOrders
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: orders
          method: get
          cors: true
  updateOrder:
    handler: orders.updateOrder
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: orders/{id}
          method: put
          cors: true
  deleteOrder:
    handler: orders.deleteOrder
    environment:
      DB: ${ssm:divinity}
    events:
      - http:
          path: orders/{id}
          method: delete
          cors: true